allprojects {
    apply plugin:"java"

    // common settings for all the sub-projects, to avoid re-stating them in each build.gradle
    sourceCompatibility = 1.8
    group = 'org.cleanas2'
    version = '1.1.0'
}

subprojects {
    // settings that are applied to all sub projects (from settings.gradle)

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile (
                'org.apache.httpcomponents:httpclient:4.5.4',
                'org.apache.httpcomponents:httpmime:4.5.4',
                'org.apache.commons:commons-lang3:3.6',
                'commons-logging:commons-logging:1.2',
                'commons-io:commons-io:2.6',
                'junit:junit:4.12',

                'javax.mail:mail:1.4.7',
                'io.fastjson:boon:0.34',

                // kotlin support for jdk8 (https://kotlinlang.org/docs/reference/using-gradle.html#plugin-and-versions)
                "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
        )
        testCompile (
                'org.testng:testng:6.13.1'
        )
    }
}

task run {
    // $> gradle -q run
    // this will run the "server" projects "run" task.  it uses the same name as used by the 'application' plugin
    // for convenience, but it is NOT the same
    dependsOn ":server:run"
}

//
//task compileToBin(type: Sync) {
//    dependsOn build
//    dependsOn ":server:jar" // force server to generate it's jars, which will include the dependency on common
//    description 'Copies the AS2 jar and all runtime jars to the ./bin directory'
//
//    into "$projectDir/bin"
//    from(
//        project(":server").configurations.runtime,
//        project(":server").jar.outputs // this should include both the server & common jars
//    )
//}

//task dist << { // kept as a sample
//    project.copy {
//        from configurations.compile
//        into file('distribution/lib')
//    }
//}

task listRuntime << {
    configurations.runtime.each { File f -> println f }
}

// NOTES
// use the syntax project(":server") { } to inject configuration into the sub-project